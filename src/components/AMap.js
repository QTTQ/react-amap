/** * Created by zhouchao on 17/3/16. */import React from 'react';import { lazyAMapLoaderInstance } from '../services/amapLoader';export default class AMapComponent extends React.Component{    static defaultProps = {    base: {      zoom: 11,      center: [],    },    style: {      height: '600px'    },    scale: {      visible: true,    },    toolBar:{      visible: true,      locate: true,      autoPosition: true,    }  };    static propTypes = {    style: React.PropTypes.object,    base: React.PropTypes.object  };    constructor(props) {        super(props);        console.log(props);  }    componentWillMount() {        let { base, scale, toolBar } = this.props;        lazyAMapLoaderInstance.load().then(function () {        let map;            if(base.center.length === 0){        map = new AMap.Map('map-wrapper', {          resizeEnable: true,          zoom: base.zoom,        });      }else{        map = new AMap.Map('map-wrapper', {          resizeEnable: true,          zoom: base.zoom,          center: base.center,        });      }            const Scale = new AMap.Scale(scale);            const ToolBar = new AMap.ToolBar(toolBar);      map.addControl(Scale);      map.addControl(ToolBar);          });  };    render() {        const { style } = this.props;        return (      <div>        <div id="map-wrapper" style={{...style}} ></div>      </div>    );      }}